apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.contactssampleapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    dataBinding {
        enabled = true
    }
}
    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'androidx.appcompat:appcompat:1.0.2'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'androidx.test:runner:1.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

        implementation 'com.google.android.material:material:1.1.0-alpha07'
        implementation 'androidx.recyclerview:recyclerview:1.0.0'
        implementation 'androidx.cardview:cardview:1.0.0'

        implementation 'com.squareup.retrofit2:retrofit:2.6.0'
        implementation 'com.squareup.retrofit2:converter-gson:2.6.0'

        implementation 'com.github.bumptech.glide:glide:4.9.0'
        annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

        implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
        implementation 'io.reactivex.rxjava2:rxjava:2.2.9'

        def room_version = "2.1.0-rc01"
        implementation "androidx.room:room-runtime:$room_version"
        implementation "androidx.room:room-rxjava2:$room_version"
        annotationProcessor "androidx.room:room-compiler:$room_version"

        implementation 'com.google.dagger:dagger-android:2.22.1'
        implementation 'com.google.dagger:dagger-android-support:2.22.1'
        // if you use the support libraries
        annotationProcessor 'com.google.dagger:dagger-android-processor:2.22.1'

        def lifecycle_version = "2.0.0"
        // ViewModel and LiveData
        implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
        annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
        testImplementation "androidx.arch.core:core-testing:$lifecycle_version"


        // Circle ImageView
        implementation 'de.hdodenhof:circleimageview:3.0.0'

        implementation 'com.karumi:dexter:5.0.0'
        api 'com.google.android.material:material:1.1.0-alpha06'


        implementation 'com.android.support:design:28.0.0'

        // AndroidX test
        def androidx_test_version = "1.1.0"
        androidTestImplementation "androidx.test:core:$androidx_test_version"
        androidTestImplementation "androidx.test:runner:$androidx_test_version"

        // Architecture components testing
        def androidx_arch_test_version = "2.0.1"
        androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"


        // -------- LOCAL UNIT TESTS (use JUnit5)
        // JUnit Jupiter
        def junit_jupiter_version = "5.3.2"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"


        // -------- MOCKITO
        def mockito_version = "2.19.0"
        testImplementation "org.mockito:mockito-core:$mockito_version"


    }
